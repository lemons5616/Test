local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Tha Bronx", "DarkTheme")
local Combat = Window:NewTab("Combat")
local Player = Window:NewTab("Player")
local Utility = Window:NewTab("Utility")
local Exploit = Window:NewTab("Exploit")

local GunModSection = Combat:NewSection("Gun Mods")
local EnviromentSection = Combat:NewSection("Environment")
local PlayerSection = Player:NewSection("Player Modifications")
local UtilitySection = Utility:NewSection("Utility")
local PurchasingSection = Utility:NewSection("Purchasing")
local ExploitSection = Exploit:NewSection("Useful Exploits")

GunModSection:NewButton("Infinite Ammo", "Lets the player have unlimited ammo.", function()
	local function findModuleScriptInCharacter(character, moduleName)
		for _, descendant in ipairs(character:GetDescendants()) do
			if descendant:IsA("ModuleScript") and descendant.Name == moduleName then
				return descendant
			end
		end
		return nil  -- Return nil if not found
	end

	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")

	local localPlayer = Players.LocalPlayer  -- Get the local player
	if localPlayer then
		local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()  -- Wait if character not yet loaded
		local settingModule = findModuleScriptInCharacter(character, "Setting")
		local gun = settingModule  -- Assigning the found moduleScript to 'gun'

		if settingModule then
			local settings = require(gun)  -- Require the module script
			settings.LimitedAmmoEnabled = false
			settings.AmmoPerMag = 9000000000
			settings.Ammo = 9000000000
			settings.MaxAmmo = 9000000000
		else
			warn("'Setting' ModuleScript not found in the character.")
		end
	else
		warn("LocalPlayer not found.")
	end
end)

EnviromentSection:NewButton("FastFists", "No delay when using fists.", function()
	-- Script to find LocalPlayer's 'Setting' ModuleScript in Workspace

	-- Define a function to find a module script by name in a given model
	local function findModuleScriptInCharacter(character, moduleName)
		for _, descendant in ipairs(character:GetDescendants()) do
			if descendant:IsA("ModuleScript") and descendant.Name == moduleName then
				return descendant
			end
		end
		return nil  -- Return nil if not found
	end

	-- Main execution
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")

	local localPlayer = Players.LocalPlayer  -- Get the local player
	if localPlayer then
		local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()  -- Wait if character not yet loaded
		local settingModule = findModuleScriptInCharacter(character, "Melee_Settings")
		local punch = settingModule  -- Assigning the found moduleScript to 'gun'

		if settingModule then
			local punchSettings = require(punch)
			punchSettings.AttackCooldown = 1 / 100
		else
			warn("'Setting' ModuleScript not found in the character.")
		end
	else
		warn("LocalPlayer not found.")
	end
end)

GunModSection:NewButton("Rapid Fire", "Lets the player fire gun rapidly.", function()
	local function findModuleScriptInCharacter(character, moduleName)
		for _, descendant in ipairs(character:GetDescendants()) do
			if descendant:IsA("ModuleScript") and descendant.Name == moduleName then
				return descendant
			end
		end
		return nil  -- Return nil if not found
	end

	-- Main execution
	local Players = game:GetService("Players")
	local Workspace = game:GetService("Workspace")

	local localPlayer = Players.LocalPlayer  -- Get the local player
	if localPlayer then
		local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()  -- Wait if character not yet loaded
		local settingModule = findModuleScriptInCharacter(character, "Setting")
		local gun = settingModule  -- Assigning the found moduleScript to 'gun'

		if settingModule then
			local settings = require(gun)  -- Require the module script
			settings.FireRate = 1 / 10000
			settings.Auto = true
			settings.BurstFireEnabled = true
			settings.BulletPerBurst = 1
			settings.BurstRate = 1 / 10000
			print("Test: ".. settings.Ammo)
		else
			warn("'Setting' ModuleScript not found in the character.")
		end
	else
		warn("LocalPlayer not found.")
	end
end)


PlayerSection:NewButton("NoFallDamage", "Makes the player take no fall damage when falling.", function()
	game:GetService("Players").LocalPlayer.Character.FallDamageRagdoll.Damage:Destroy()
end)

PurchasingSection:NewDropdown("Buy", "DropdownInf", {"GrapeDrank", "Rice", "Seeds"}, function(currentOption)
	if (currentOption == "GrapeDrank") then
		local args = {
			[1] = "GrapeDrank"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("ExoticShopRemote"):InvokeServer(unpack(args))
	elseif (currentOption == "Rice") then
		local args = {
			[1] = "RiceBag"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("ExoticShopRemote"):InvokeServer(unpack(args))
	elseif (currentOption == "Seeds") then
		local args = {
			[1] = "Seeds"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("ExoticShopRemote"):InvokeServer(unpack(args))
	end
end)

-- Define teleport locations
local teleportLocations = {
	{name = "Guns Shop 1", position = Vector3.new(-1006.58356, 254.004608, -817.199097)},
	{name = "Guns Shop 2", position = Vector3.new(-129.877258, 282.965973, -796.901062)},
	{name = "Pasillo Hotel", position = Vector3.new(-24.5520306, 416.43338, -454.355347)},
	{name = "Lavanderia", position = Vector3.new(-982.799316, 252.941132, -682.534668)},
	{name = "Vendedor Arroz", position = Vector3.new(81065.0703, 133132.984, 167.565689)},
	{name = "Exotic Dealer", position = Vector3.new(-1521.92236, 273.35968, -988.202942)},
	{name = "Bank", position = Vector3.new(-130.178146, 283.632904, -1200.91504)},
	{name = "W33d Seller", position = Vector3.new(-630.154541, 252.798019, -730.857178)},
}

UtilitySection:NewDropdown("Teleports", "Select a location to teleport", {
	"Guns Shop 1", "Guns Shop 2", "Pasillo Hotel", "Lavanderia", 
	"Vendedor Arroz", "Exotic Dealer", "Bank", "W33d Seller"
}, function(selected)
	for _, location in ipairs(teleportLocations) do
		if location.name == selected then
			local player = game.Players.LocalPlayer
			if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				player.Character.HumanoidRootPart.CFrame = CFrame.new(location.position)
			end
			break
		end
	end
end)

ExploitSection:NewButton("Dupe Item", "Dupe Items", function()
	local player = game:GetService("Players").LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	-- Unequip all tools
	character.Humanoid:UnequipTools()

	-- Get the safes
	local safesContainer = workspace:WaitForChild("1# Map"):WaitForChild("2 Crosswalks"):WaitForChild("Safes")
	local safes = safesContainer:GetChildren()

	-- Ensure there are safes available
	if #safes > 0 then
		-- Choose a random safe
		local randomSafe = safes[math.random(1, #safes)]

		-- Teleport the player to the random safe's position
		character:SetPrimaryPartCFrame(randomSafe.PrimaryPart.CFrame)
	end
end)



